pr:
  branches:
    include:
      - master

variables:
  image_repo: tsystemsmms
  image_namespace: phonebook-build
  image_tag: pr-$(System.PullRequest.PullRequestNumber)
  helm_artifact_name: HelmPhonebookPackage

jobs:
  - job: build_phonebook_frontend
    displayName: 'Phonebook Frontend'
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: UseNode@1
        inputs:
          version: '12.x'

      - script: node version.js $(image_tag) $(Build.SourceVersion) $(Build.SourceVersion)
        displayName: 'Write Version Number'
        workingDirectory: 'Phonebook.Frontend/'

      - script: docker build -t $(image_repo)/$(image_namespace):$(image_tag) .
        displayName: 'Build Image'
        workingDirectory: 'Phonebook.Frontend/'

      - script: |
          docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
          docker push $(image_repo)/$(image_namespace):$(image_tag)
        workingDirectory: 'Phonebook.Frontend/'
        displayName: 'Push Image'
        env:
          DOCKER_REGISTRY_PASSWORD: $(DOCKER_REGISTRY_PASSWORD)
          DOCKER_REGISTRY_USER: $(DOCKER_REGISTRY_USER)

  - job: build_phonebook_helm
    displayName: Phonebook Helm Chart
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: HelmInstaller@1
        inputs:
          helmVersionToInstall: '2.14.2'
      - script: helm dep update
        workingDirectory: 'Phonebook/phonebook/'
      - task: HelmDeploy@0
        displayName: Helm package
        inputs:
          command: package
          chartPath: Phonebook/phonebook
          destination: $(Build.ArtifactStagingDirectory)
      - publish: $(Build.ArtifactStagingDirectory)
        artifact: $(helm_artifact_name)

  - job: deploy_preview
    dependsOn:
      - build_phonebook_frontend
      - build_phonebook_helm
    displayName: 'Deploy Preview'
    pool:
      vmImage: 'ubuntu-16.04'
    variables:
      namespace: $(image_tag)
    steps:
      - download: current
        artifact: $(helm_artifact_name)

      - task: HelmInstaller@1
        displayName: 'Install Helm 2.14.2'
        inputs:
          helmVersionToInstall: 2.14.2

      - task: Kubernetes@1
        displayName: 'Create Namespace'
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'Phonebook Kubernetes Demo Cluster'
          namespace: 'kube-public'
          command: 'apply'
          useConfigurationFile: true
          configurationType: 'inline'
          inline: |
            apiVersion: v1
            kind: Namespace
            metadata:
              name: $(namespace)

      - task: HelmDeploy@0
        displayName: 'helm upgrade'
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: 'Phonebook Kubernetes Demo Cluster'
          namespace: $(namespace)
          command: upgrade
          chartType: FilePath
          chartPath: '$(Pipeline.Workspace)/$(helm_artifact_name)/phonebook-0.1.0.tgz'
          releaseName: phonebook-$(namespace)
          overrideValues: 'frontend.image.tag=$(image_tag),frontend.image.repository=$(image_repo),frontend.image.name=$(image_namespace),traefik.enabled=false,host=$(image_tag).demo-phonebook.me'
          valueFile: 'demo/values.yml'
          recreate: true
          tillerNamespace: kube-system

      - task: Kubernetes@1
        displayName: 'Delete Namespace'
        condition: failed()
        inputs:
          kubernetesServiceEndpoint: 'Phonebook Kubernetes Demo Cluster'
          namespace: 'kube-public'
          command: delete
          arguments: 'namespace $(namespace)'

  - job: notify
    displayName: 'Notify Github '
    pool: server
    dependsOn: deploy_preview
    steps:
      - task: InvokeRESTAPI@1
        inputs:
          connectionType: 'connectedServiceName'
          serviceConnection: 'MMS Github API Bot'
          method: 'POST'
          headers: |
            {
            "Content-Type":"application/json"
            }
          body: |
            {
              "body": "Preview Environment ready at https://$(image_tag).demo-phonebook.me"
            }
          urlSuffix: 'repos/T-Systems-MMS/phonebook/issues/$(System.PullRequest.PullRequestNumber)/comments'
          waitForCompletion: 'false'

  - job: delete_preview_delay
    displayName: 'Delay Deletion of Preview Environment'
    pool: server
    dependsOn: deploy_preview
    # Added 10 minutes safety-margin as the job would fail otherwise
    timeoutInMinutes: 1450
    cancelTimeoutInMinutes: 1450
    steps:
      - task: Delay@1
        inputs:
          delayForMinutes: '1440'

  - job: delete_preview
    dependsOn:
      - delete_preview_delay
    condition: succeededOrFailed()
    displayName: 'Delete Preview Environment'
    pool:
      vmImage: 'ubuntu-16.04'
    variables:
      namespace: $(image_tag)
    steps:
      - checkout: none
      - task: Kubernetes@1
        displayName: 'Delete Namespace'
        inputs:
          kubernetesServiceEndpoint: 'Phonebook Kubernetes Demo Cluster'
          namespace: 'kube-public'
          command: delete
          arguments: 'namespace $(namespace)'
