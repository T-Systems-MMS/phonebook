pr: 
  branches:
    include:
      - master

variables:
  image_repo: danielhabenicht/phonebook
  image_tag: pr-$[System.PullRequest.PullRequestId] 

stages:
# Build All Containers needed for the preview
# Currently this is only the Phonebook.Frontend
- stage: build
  jobs:
    - job: phonebook_frontend
      displayName: 'Phonebook Frontend'
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - task: UseNode@1
        inputs:
          version: '11.x'

      - script: node version.js $(System.PullRequest.PullRequestId) $(Build.SourceVersion) $(Build.SourceVersion)
        workingDirectory: 'Phonebook.Frontend/'
      - script: |
          docker build -t $image_repo:$image_tag .
          docker login -u $DOCKER_REGISTRY_USER -p $(DOCKER_REGISTRY_PASSWORD)
          docker push $image_repo:$image_tag
        workingDirectory: 'Phonebook.Frontend/'
        env:
          DOCKER_REGISTRY_PASSWORD: $(DOCKER_REGISTRY_PASSWORD)
          DOCKER_REGISTRY_USER: $(DOCKER_REGISTRY_USER)

    - job: phonebook
      displayName: Phonebook
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - task: HelmInstaller@1
        inputs:
          helmVersionToInstall: 'latest'
      - script: helm dep update
        workingDirectory: 'Phonebook/phonebook/'
      - task: HelmDeploy@0
        displayName: Helm package
        inputs:
          command: package
          chartPath: Phonebook/phonebook
          destination: $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)
          artifactName: drop

- stage: deploy
  dependsOn: build
  jobs:
    - job: deploy_preview
      displayName: 'Deploy Preview' 
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - task: HelmInstaller@1
        inputs:
          helmVersionToInstall: 'latest'
      - task: HelmDeploy@0
        displayName: Helm package
        inputs:
          command: package
          chartPath: Phonebook/phonebook
          destination: $(Build.ArtifactStagingDirectory)